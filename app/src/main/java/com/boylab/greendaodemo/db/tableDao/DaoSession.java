package com.boylab.greendaodemo.db.tableDao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.boylab.greendaodemo.db.table.Fruit;
import com.boylab.greendaodemo.db.table.Husband;
import com.boylab.greendaodemo.db.table.JoinTeachers;
import com.boylab.greendaodemo.db.table.Leader;
import com.boylab.greendaodemo.db.table.Menber;
import com.boylab.greendaodemo.db.table.Student;
import com.boylab.greendaodemo.db.table.Teacher;
import com.boylab.greendaodemo.db.table.Wife;

import com.boylab.greendaodemo.db.tableDao.FruitDao;
import com.boylab.greendaodemo.db.tableDao.HusbandDao;
import com.boylab.greendaodemo.db.tableDao.JoinTeachersDao;
import com.boylab.greendaodemo.db.tableDao.LeaderDao;
import com.boylab.greendaodemo.db.tableDao.MenberDao;
import com.boylab.greendaodemo.db.tableDao.StudentDao;
import com.boylab.greendaodemo.db.tableDao.TeacherDao;
import com.boylab.greendaodemo.db.tableDao.WifeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fruitDaoConfig;
    private final DaoConfig husbandDaoConfig;
    private final DaoConfig joinTeachersDaoConfig;
    private final DaoConfig leaderDaoConfig;
    private final DaoConfig menberDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig teacherDaoConfig;
    private final DaoConfig wifeDaoConfig;

    private final FruitDao fruitDao;
    private final HusbandDao husbandDao;
    private final JoinTeachersDao joinTeachersDao;
    private final LeaderDao leaderDao;
    private final MenberDao menberDao;
    private final StudentDao studentDao;
    private final TeacherDao teacherDao;
    private final WifeDao wifeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fruitDaoConfig = daoConfigMap.get(FruitDao.class).clone();
        fruitDaoConfig.initIdentityScope(type);

        husbandDaoConfig = daoConfigMap.get(HusbandDao.class).clone();
        husbandDaoConfig.initIdentityScope(type);

        joinTeachersDaoConfig = daoConfigMap.get(JoinTeachersDao.class).clone();
        joinTeachersDaoConfig.initIdentityScope(type);

        leaderDaoConfig = daoConfigMap.get(LeaderDao.class).clone();
        leaderDaoConfig.initIdentityScope(type);

        menberDaoConfig = daoConfigMap.get(MenberDao.class).clone();
        menberDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        teacherDaoConfig = daoConfigMap.get(TeacherDao.class).clone();
        teacherDaoConfig.initIdentityScope(type);

        wifeDaoConfig = daoConfigMap.get(WifeDao.class).clone();
        wifeDaoConfig.initIdentityScope(type);

        fruitDao = new FruitDao(fruitDaoConfig, this);
        husbandDao = new HusbandDao(husbandDaoConfig, this);
        joinTeachersDao = new JoinTeachersDao(joinTeachersDaoConfig, this);
        leaderDao = new LeaderDao(leaderDaoConfig, this);
        menberDao = new MenberDao(menberDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        teacherDao = new TeacherDao(teacherDaoConfig, this);
        wifeDao = new WifeDao(wifeDaoConfig, this);

        registerDao(Fruit.class, fruitDao);
        registerDao(Husband.class, husbandDao);
        registerDao(JoinTeachers.class, joinTeachersDao);
        registerDao(Leader.class, leaderDao);
        registerDao(Menber.class, menberDao);
        registerDao(Student.class, studentDao);
        registerDao(Teacher.class, teacherDao);
        registerDao(Wife.class, wifeDao);
    }
    
    public void clear() {
        fruitDaoConfig.clearIdentityScope();
        husbandDaoConfig.clearIdentityScope();
        joinTeachersDaoConfig.clearIdentityScope();
        leaderDaoConfig.clearIdentityScope();
        menberDaoConfig.clearIdentityScope();
        studentDaoConfig.clearIdentityScope();
        teacherDaoConfig.clearIdentityScope();
        wifeDaoConfig.clearIdentityScope();
    }

    public FruitDao getFruitDao() {
        return fruitDao;
    }

    public HusbandDao getHusbandDao() {
        return husbandDao;
    }

    public JoinTeachersDao getJoinTeachersDao() {
        return joinTeachersDao;
    }

    public LeaderDao getLeaderDao() {
        return leaderDao;
    }

    public MenberDao getMenberDao() {
        return menberDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public TeacherDao getTeacherDao() {
        return teacherDao;
    }

    public WifeDao getWifeDao() {
        return wifeDao;
    }

}
